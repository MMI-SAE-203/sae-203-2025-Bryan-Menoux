---
import CardFilm from "../components/CardFilm.astro";
import fleche from "../assets/fleche_bas_nue.webp";

const props = Astro.props;
let films = props.films;
---

<div class="flex flex-col justify-center items-center gap-2">
  <div class="relative w-full flex items-center justify-center">
    <div
      id="carousel"
      class="flex gap-8 lg:gap-32 px-16 lg:px-48 py-4 lg:py-8 overflow-x-scroll scroll-smooth snap-x snap-mandatory no-scrollbar"
    >
      {
        films.map((film: any) => (
          <div class="snap-center flex-shrink-0">
            <CardFilm film={film} />
          </div>
        ))
      }
    </div>
  </div>
  <div class="flex gap-4">
    <button id="prev" class="px-6 py-2 rounded-4xl bg-(--color-light-blue)"
      ><img
        loading="lazy"
        src={fleche.src}
        alt="fleche gauche"
        class="w-12 rotate-90"
      /></button
    >
    <button id="next" class="px-6 py-2 rounded-4xl bg-(--color-light-blue)"
      ><img
        loading="lazy"
        src={fleche.src}
        alt="fleche droite"
        class="w-12 -rotate-90"
      /></button
    >
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const carousel = document.getElementById("carousel");
    const prev = document.getElementById("prev");
    const next = document.getElementById("next");

    if (!carousel || !prev || !next) return;

    function getScrollAmount() {
      const card = carousel!.querySelector(".snap-center");
      if (!card) return 300; // Valeur par défaut si aucun élément trouvé
      const gap = parseInt(window.getComputedStyle(carousel!).gap) || 0;
      return (card as HTMLElement).offsetWidth + gap;
    }

    function updateScrollMax() {
      return carousel!.scrollWidth - carousel!.clientWidth;
    }

    prev.addEventListener("click", () => {
      let scrollAmount = getScrollAmount();
      carousel.scrollBy({ left: -scrollAmount, behavior: "smooth" });
    });

    next.addEventListener("click", () => {
      let scrollAmount = getScrollAmount();
      let scrollMax = updateScrollMax();
      let newScrollLeft = carousel.scrollLeft + scrollAmount;

      if (newScrollLeft > scrollMax) {
        newScrollLeft = scrollMax;
      }

      carousel.scrollBy({ left: scrollAmount, behavior: "smooth" });
    });
  });
</script>
